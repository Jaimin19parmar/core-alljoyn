# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0

#

Import('env', 'CheckCXXFlag')
import os

# Darwin specific flags
env.Append(CPPDEFINES=['QCC_OS_DARWIN'])

config = Configure(env, custom_tests = { 'CheckCXXFlag' : CheckCXXFlag })
if not config.CheckCXXFlag('-std=c++11'):
   if not config.CheckCXXFlag('-std=c++0x'):
      print '*** Compiler too old to build AllJoyn.  Aborting.'
      Exit(1)
env = config.Finish()

env.Append(CFLAGS=['-Wall',
                   '-pipe',
                   '-std=c99',
                   '-fno-strict-aliasing',
                   '-Wno-long-long'])

env.Append(CXXFLAGS=['-Wall',
                     '-Werror=non-virtual-dtor',
                     '-pipe',
                     '-fno-exceptions',
                     '-fno-strict-aliasing',
                     '-Wno-deprecated'])

# Debug/Release Variants
if env['VARIANT'] == 'debug':
   env.Append(CFLAGS='-g')
   env.Append(CXXFLAGS='-g')
   env.Append(JAVACFLAGS='-g -Xlint -Xlint:-serial')
   print 'Using debug settings for darwin build...'
else:
   env.Append(CFLAGS='-Os')
   env.Append(CXXFLAGS='-Os')
   env.Append(LINKFLAGS='')
   env.Append(JAVACFLAGS='-Xlint -Xlint:-serial')
   print 'Using release settings for darwin build...'

env.SConscript('${CPU}/SConscript')

env.Append(CPPDEFINES=['MECHANISM_PIPE'])
env.AppendUnique(LIBS =['stdc++', 'pthread'])
if env['CRYPTO'] == 'openssl':
    env.AppendUnique(LIBS =['crypto', 'ssl'])
    if env['CPU'] in ['arm', 'armv7', 'armv7s', 'arm64', 'iOS_universal']:
        vars = Variables()
        vars.Add(PathVariable('OPENSSL_ROOT', 'Base OpenSSL directory (darwin only)', os.environ.get('OPENSSL_ROOT')))
        vars.Update(env)
        Help(vars.GenerateHelpText(env))
        if '' == env.subst('$OPENSSL_ROOT'):
            # Must specify OPENSSL_ROOT for darwin, arm
            print 'Must specify OPENSSL_ROOT when building for OS=darwin, CPU=arm'
            if not GetOption('help'):
                Exit(1)
        env.Append(CPPPATH = ['$OPENSSL_ROOT/include'])
        env.Append(LIBPATH = ['$OPENSSL_ROOT/build/' + os.environ.get('CONFIGURATION') + '-' + os.environ.get('PLATFORM_NAME')])
    print 'Using OpenSSL crypto'
else:
    print 'Using builtin crypto'