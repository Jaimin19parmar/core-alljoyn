# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0

#

Import('router_env', 'router_objs', 'srobj')

# Build the posix daemon and service launcher helper.
if router_env['OS_SUBGROUP'] != 'darwin':
    daemon_env = router_env.Clone()
    if daemon_env['OS'] != 'android':
        daemon_env.Append(LIBS = 'cap')
    #Add hardening flags for linux release build for details please refer to
    #https://wiki.debian.org/Hardening
    #The goal is to avoid any impact for these flags to our capability of debugging.
    if daemon_env['OS'] == 'linux' and daemon_env['VARIANT'] == 'release':
           daemon_env.Append(CXXFLAGS = ['-fstack-protector-all', '-Wstack-protector', '--param', 'ssp-buffer-size=4', '-D_FORTIFY_SOURCE=2', '-O2', '-fPIE'])
           daemon_env.Append(LINKFLAGS = ['-pie', '-fPIE', '-Wl,-z,relro,-z,now'])

    daemon = daemon_env.Program('alljoyn-daemon', ['daemon-main.cc'] + srobj + router_objs)
else:
    daemon = []

#
# On Android, build a static library that can be linked into a JNI dynamic
# library to implement the daemon as a Service
#
if router_env['OS'] == 'android':
   libenv = router_env.Clone(CCFLAGS = '-DROUTER_LIB')
   libenv.Object(target = 'alljoyn-daemon', source = 'daemon-main.cc')
   libdaemon = libenv.StaticLibrary(['alljoyn-daemon'] + srobj + router_objs)
   dlibs = libenv.Install('$CPP_DISTDIR/lib', libdaemon)

progs = daemon
Return('progs')