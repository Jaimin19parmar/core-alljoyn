# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0

#

Import('env')

samples_env = env.Clone()

# Disallow headers that are not included in the "dist" directory
if env.has_key('ANDROID_CPPPATH'):
    # Include android-ndk paths that are needed for android builds
    samples_env.Replace(CPPPATH = env['ANDROID_CPPPATH'])
    samples_env.Append(CPPPATH = ['.'])
else:
    samples_env.Replace(CPPPATH = '.')

samples_env.Append(CPPPATH = ['$DISTDIR/cpp/inc'])
samples_env.Append(CPPPATH = ['$DISTDIR/cpp/inc/alljoyn'])
samples_env.Append(CPPPATH = ['$DISTDIR/c/inc'])
samples_env.Append(CPPPATH = ['$DISTDIR/c/inc/alljoyn'])

if samples_env['BR'] == 'on':
    # Build apps with bundled daemon support
    samples_env.Prepend(LIBS = [samples_env['ajrlib']])

# About feature sample programs
samples_env.SConscript('about/SConscript', exports = {'env': samples_env})

# AboutListener sample program
samples_env.SConscript('aboutlistener/SConscript', exports = {'env': samples_env})

# Basic Sample programs
samples_env.SConscript('basic/SConscript', exports = {'env': samples_env})

# Simple Sample programs
samples_env.SConscript('simple/SConscript', exports = {'env': samples_env})

# Security Sample programs
samples_env.SConscript('secure/SConscript', exports = {'env': samples_env})

# Security Manager Sample program
if not env.has_key('SQLITE_DIR'):
    print('SQLITE_DIR not specified: skipping Security Manager sample program build')
else:
    samples_env.SConscript('securitymgr/SConscript', exports = {'env': samples_env})

# Chat Sample program
samples_env.SConscript('chat/SConscript', exports = {'env': samples_env})

# Trusted Thin Library Sample Routing Node program
samples_env.SConscript('TrustedTLSampleRN/SConscript', exports = {'env': samples_env})

# Event and Action Sample program
samples_env.SConscript('eventaction/SConscript', exports = {'env': samples_env})

# Observer Sample program
samples_env.SConscript('observer/SConscript', exports = {'env': samples_env})

# Install readme
if env['OS_CONF'] == 'windows':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.windows.txt')
elif env['OS_CONF'] == 'android':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.android.txt')
elif env['OS_CONF'] == 'linux':
    env.InstallAs('$CPP_DISTDIR/samples/README.txt', 'README.linux.txt')