/******************************************************************************
 *  * 
 *    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
 *    Source Project Contributors and others.
 *    
 *    All rights reserved. This program and the accompanying materials are
 *    made available under the terms of the Apache License, Version 2.0
 *    which accompanies this distribution, and is available at
 *    http://www.apache.org/licenses/LICENSE-2.0

 ******************************************************************************/
////////////////////////////////////////////////////////////////////////////////
//
//  ALLJOYN MODELING TOOL - GENERATED CODE
//
////////////////////////////////////////////////////////////////////////////////
//
//  DO NOT EDIT
//
//  Add a category or subclass in separate .h/.m files to extend these classes
//
////////////////////////////////////////////////////////////////////////////////
//
//  AJNObserverTestObjects.h
//
////////////////////////////////////////////////////////////////////////////////

#import <Foundation/Foundation.h>
#import "AJNBusAttachment.h"
#import "AJNBusInterface.h"
#import "AJNProxyBusObject.h"


////////////////////////////////////////////////////////////////////////////////
//
// TestJustADelegate Bus Interface
//
////////////////////////////////////////////////////////////////////////////////

@protocol TestJustADelegate <AJNBusInterface>


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


@end

////////////////////////////////////////////////////////////////////////////////

    

////////////////////////////////////////////////////////////////////////////////
//
// TestJustBDelegate Bus Interface
//
////////////////////////////////////////////////////////////////////////////////

@protocol TestJustBDelegate <AJNBusInterface>


// methods
//
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


@end

////////////////////////////////////////////////////////////////////////////////

    

////////////////////////////////////////////////////////////////////////////////
//
// TestBothDelegate Bus Interface
//
////////////////////////////////////////////////////////////////////////////////

@protocol TestBothDelegate <AJNBusInterface>


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


@end

////////////////////////////////////////////////////////////////////////////////

    

////////////////////////////////////////////////////////////////////////////////
//
// TestObjectABDelegateB Bus Interface
//
////////////////////////////////////////////////////////////////////////////////

@protocol TestObjectABDelegateB <AJNBusInterface>


// methods
//
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


@end

////////////////////////////////////////////////////////////////////////////////

    

////////////////////////////////////////////////////////////////////////////////
//
//  AJNTestJustA Bus Object superclass
//
////////////////////////////////////////////////////////////////////////////////

@interface AJNTestJustA : AJNBusObject<TestJustADelegate>

// properties
//


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


// signals
//


@end

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//  TestJustA Proxy
//
////////////////////////////////////////////////////////////////////////////////

@interface TestJustAProxy : AJNProxyBusObject

// properties
//


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path;


@end

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//  AJNTestJustB Bus Object superclass
//
////////////////////////////////////////////////////////////////////////////////

@interface AJNTestJustB : AJNBusObject<TestJustBDelegate>

// properties
//


// methods
//
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


// signals
//


@end

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//  TestJustB Proxy
//
////////////////////////////////////////////////////////////////////////////////

@interface TestJustBProxy : AJNProxyBusObject

// properties
//


// methods
//
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path;


@end

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//  AJNTestBoth Bus Object superclass
//
////////////////////////////////////////////////////////////////////////////////

@interface AJNTestBoth : AJNBusObject<TestBothDelegate, TestObjectABDelegateB>

// properties
//


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path message:(AJNMessage *)methodCallMessage;


// signals
//


@end

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
//  TestBoth Proxy
//
////////////////////////////////////////////////////////////////////////////////

@interface TestBothProxy : AJNProxyBusObject

// properties
//


// methods
//
- (void)identifyAWithBusname:(NSString**)busname andPath:(NSString**)path;
- (void)identifyBWithBusname:(NSString**)busname andPath:(NSString**)path;


@end

////////////////////////////////////////////////////////////////////////////////