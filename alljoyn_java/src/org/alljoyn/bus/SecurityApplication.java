/******************************************************************************
 * Copyright AllSeen Alliance. All rights reserved.
 *
 *    Permission to use, copy, modify, and/or distribute this software for any
 *    purpose with or without fee is hereby granted, provided that the above
 *    copyright notice and this permission notice appear in all copies.
 *
 *    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 *    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 *    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 *    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 *    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 *    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 ******************************************************************************/

package org.alljoyn.bus.ifaces;

import java.util.Map;

import org.alljoyn.bus.BusException;
import org.alljoyn.bus.Variant;
import org.alljoyn.bus.annotation.BusInterface;
import org.alljoyn.bus.annotation.BusMethod;
import org.alljoyn.bus.annotation.BusProperty;
import org.alljoyn.bus.annotation.BusSignal;
import org.alljoyn.bus.common.ECCPublicKey;
import org.alljoyn.bus.ManifestTemplateDigest;
import org.alljoyn.bus.ManifestTemplateRule;
import org.alljoyn.bus.ManufacturerCertificate;

/**
 * Definition of the Security BusInterface
 */
@BusInterface (name = SecurityApplication.INTERFACE_NAME)
public interface SecurityApplication
{
    String INTERFACE_NAME = "org.alljoyn.Bus.Security.Application";
    String OBJ_PATH       = "/org/alljoyn/Bus/Security";
    short VERSION = 1;

    /**
     * @return the Version of the Security protocol
     * @throws BusException indicating failure to read Version property
     */
    @BusProperty(signature="q")
    short getVersion() throws BusException;

    enum ApplicationState {
        /**
         * The application is not claimed and not accepting claim requests.
         */
        NOT_CLAIMABLE,
        /**
         * The application is not claimed and is accepting claim requests.
         */
        CLAIMABLE,
        /**
         * The application is claimed and can be configured.
         */
        CLAIMED,
        /**
         * The application is claimed, but requires a configuration update (after a software upgrade).
         */
        NEED_UPDATE
    }

    /**
     * @return the ApplicationState
     * @throws BusException indicating failure to read the ApplicationState property
     */
    @BusProperty(signature="q")
    ApplicationState getApplicationState() throws BusException;

    /**
     * @return the ManifestTemplateDigest
     * @throws BusException indicating failure to read the ManifestTemplateDigest property
     */
    @BusProperty(signature="(yay)")
    ManifestTemplateDigest getManifestTemplateDigest() throws BusException;

    /**
     * @return the EccPublicKey
     * @throws BusException indicating failure to read EccPublicKey property
     */
    @BusProperty(signature="(yyayay)")
    ECCPublicKey getEccPublicKey() throws BusException;

    /**
     * @return the ManufacturerCertificate
     * @throws BusException indicating failure to read ManufacturerCertificate property
     */ 
    @BusProperty(signature="a(yay)")
    ManufacturerCertificate[] getManufacturerCertificate() throws BusException;

    /**
     * @return the ManifestTemplate
     * @throws BusException indicating failure to read ManifestTemplate property
     */
    @BusProperty(signature="a(ssya(syy))")
    ManifestTemplateRule[] getManifestTemplate() throws BusException;

    short CLAIM_CAPABLE_ECDHE_NULL = 0x01;
    @Deprecated
    short CLAIM_CAPABLE_ECDHE_PSK = 0x02;
    short CLAIM_CAPABLE_ECDHE_ECDSA = 0x04;
    short CLAIM_CAPABLE_ECDHE_SPEKE = 0x08;

    /**
     * @return the ClaimCapabilities
     * @throws BusException indicating failure to read ClaimCapabilities property
     */
    @BusProperty(signature="q")
    short getClaimCapabilities() throws BusException;

    /**
     * The pre-shared key or password is generated by the security manager
     */
    short CLAIM_CAPABLE_ADDITIONAL_PSK_GENERATED_BY_SECURITY_MANAGER = 0x01;

    /**
     * The pre-shared key or password is generated by the application
     */
    short CLAIM_CAPABLE_ADDITIONAL_PSK_GENERATED_BY_APPLICATION      = 0x02;

    /**
     * @return the ClaimCapabilitiesAdditionalInfo
     * @throws BusException indicating failure to read ClaimCapabilitiesAdditionalInfo property
     */
    @BusProperty(signature="q")
    short getClaimCapabilityAdditionalInfo() throws BusException;
}
