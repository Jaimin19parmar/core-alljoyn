# # 
#    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
#    Source Project Contributors and others.
#    
#    All rights reserved. This program and the accompanying materials are
#    made available under the terms of the Apache License, Version 2.0
#    which accompanies this distribution, and is available at
#    http://www.apache.org/licenses/LICENSE-2.0

#
import os.path
Import('env')

sdk_secureDoorService = env.Java('$OBJDIR_ALLJOYN_JAVA/samples/JavaSDKDoc/JavaSDKDocSecureDoorService', 'src',
                                    JAVACLASSPATH=env.GetBuildPath(env.subst('$JARDIR/alljoyn.jar')))

#if the manifest file does not yet exist create it unless clean has be specified.
if not env.GetOption('clean'):
    if not os.path.isfile('MANIFEST.MF'):
        manifest = ("Manifest-Version: 1.0\n" +
                    "Class-Path: alljoyn.jar\n" +
                    "Main-Class: org.alljoyn.bus.samples.SecureDoorService\n")
        file = open('MANIFEST.MF', 'w')
        file.write(manifest)
        file.close()

sdk_secureDoorService.append('MANIFEST.MF')

env.Jar('$JARDIR/JavaSDKDocSecureDoorService.jar', sdk_secureDoorService)
env.Requires(sdk_secureDoorService, '$JARDIR/alljoyn.jar')

#add the sample to the dist with out adding the build files.
# The return value is the collection of files installed in the build destination.
returnValue = env.Install('$JAVA_DISTDIR/samples/JavaSDKDoc/JavaSDKDocSecureDoorService', ['src', '.classpath', '.project'])

#clean up the created manifest file
env.Clean('.', sdk_secureDoorService)
#clean the build folder that remains after cleaning all other files.
env.Clean('.', 'build')

Return('returnValue')